name: Deploy to PyPI ðŸ“¦

# trigger deploy_to_pypi workflow once deploy_to_testpypi has successfully completed
on:
  workflow_run:
    workflows: [Deploy to TestPyPI ðŸ“¦]
    types:
      - completed

  # allow for workflow to be manually initiated from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Deploy to PyPI ðŸ“¦
    runs-on: ubuntu-latest         # platform: [ubuntu-latest, macos-latest, windows-latest]
    strategy:
      matrix:
        python-version: [3.8]  #deploying using one Python version on 1 runner
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # install all required modules and dependancies using pip and setup.py installation
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python3 -m pip install setuptools wheel twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python3 setup.py install
    # Build package and upload to PyPI
    - name: Build and upload to PyPI
      run: |
        python3 setup.py sdist bdist_wheel
        twine check dist/*
        python3 -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    #sleep for 30 seconds to ensure that distribution package has successfully been uploaded to pyPI
    - name: Wait / Sleep
      uses: jakejarvis/wait-action@v0.1.0

    # download package of pyWikiCommons from PYPI server to ensure it uploaded correctly
    - name: Install pyWikiCommons from PyPI
      run: |
        pip install pyWikiCommons --upgrade
        echo -e "import pyWikiCommons as pyWiki\nprint(pyWiki.__version__)" | python3
        echo "pyWikiCommons successfully installed"